version: '3.7'

services:

  komidabot-db:
    build:
      context: ./database
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  komidabot-prod:
    build:
      context: .
      dockerfile: Dockerfile
    restart: "no"
    stop_signal: SIGINT
    environment:
      POSTGRES_HOST: komidabot-db
      POSTGRES_USER: postgres
      POSTGRES_DB: komidabot_prod
      APP_SETTINGS: config.ProductionConfig
      FLASK_ENV: production
    volumes:
      - prod_sessions:/var/flask_session
    env_file:
      - config-prod.env
    ports:
      - "5000:5000"
    depends_on:
      - komidabot-db

  komidabot-dev:
    build:
      context: .
      dockerfile: Dockerfile
    restart: "no"
    stop_signal: SIGINT
    environment:
      POSTGRES_HOST: komidabot-db
      POSTGRES_USER: postgres
      POSTGRES_DB: komidabot_dev
      APP_SETTINGS: config.DevelopmentConfig
      FLASK_ENV: development
    volumes:
      - .:/usr/src/app
      - dev_sessions:/var/flask_session
      - /usr/src/app/__pycache__/
    env_file:
      - config-dev.env
    ports:
      - "5001:5000"
    depends_on:
      - komidabot-db

volumes:
  pgdata:
    driver: local
  dev_sessions:
    driver: local
  prod_sessions:
    driver: local
